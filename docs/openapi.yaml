openapi: 3.0.2

info:
  version: 0.1.4
  title: DokuVis-Server API
  x-logo:
    url: 'logo_api.png'
    backgroundColor: '#555555'
    altText: DokuVis API Endpoint
  description: |
    API description in Markdown.

    This documentation of DokuVis-Server API is not yet complete.

    ### API Improvements

    * **510** status code incorrectly used. In case of missing data in request body, server should return status code **400** or **422**.
    * Only one authentication header should be required.
    * ...

    # Authentication

    Both authentication headers are required together. So they need to be set for almost all requests. In future, this should be reduced to only one header.

    <security-definitions />

servers:
  - url: 'http://dokuvis.org/api'

security:
  - X-Access-Token:
      - read
      - write
  - X-Key:
      - read
      - write

tags:
  - name: Login/Register
    description: Login and register operations.
  - name: Project
    description: Project related operations.
  - name: ProjInfo
    description: Information pieces to add more contextual information to the project/subproject.
  - name: Source
    description: Sources like plans, images, texts, etc.
  - name: Author
    description: Authors in this context are persons that created sources and alike.
  - name: Archive
    description: An archive consists of an collection, where a source can be part of, and its associated institution.
  - name: Comment
    description: Comment that can be attached to a model, source, or task.

x-tagGroups:
  - name: User Management
    tags:
      - Login/Register
  - name: Project
    tags:
      - Project
      - Subproject
      - ProjInfo
  - name: Content
    tags:
      - Source
      - Author
      - Archive
      - Comment

paths:
  # Auth
  /login:
    $ref: components/auth.yaml#/pathLogin

  /register:
    $ref: components/auth.yaml#/pathRegister

  # Project
  /auth/project:
    $ref: components/project.yaml#/path

  /auth/project/{prj}:
    $ref: components/project.yaml#/pathParam

  # Subproject
  /auth/project/{prj}/subproject:
    $ref: components/subproject.yaml#/path

  /auth/project/{prj}/subproject/{subprj}:
    $ref: components/subproject.yaml#/pathParam

  # ProjInfo
  /auth/project/{prj}/{subprj}/projinfo:
    $ref: components/projinfo.yaml#/path

  /auth/project/{prj}/{subprj}/projinfo/{id}:
    $ref: components/projinfo.yaml#/pathParam

  # Source
  /auth/project/{prj}/{subprj}/source:
    $ref: components/source.yaml#/path
  /auth/project/{prj}/{subprj}/source/{id}:
    $ref: components/source.yaml#/pathParam
  /auth/project/{prj}/{subprj}/source/{id}/file:
    $ref: components/source.yaml#/pathFileUpdate
  /auth/project/{prj}/{subprj}/source/{id}/spatial:
    $ref: components/source.yaml#/pathSpatial

  # Author
  /auth/project/{prj}/author:
    $ref: components/author.yaml#/path
  /auth/project/{prj}/author/{id}:
    $ref: components/author.yaml#/pathParam

  # Archive
  /auth/project/{prj}/archive:
    $ref: components/archive.yaml#/path
  /auth/project/{prj}/archive/{id}:
    $ref: components/archive.yaml#/pathParam

  # Comment
  /auth/project/:prj/:subprj/comment:
    $ref: components/comment.yaml#/path
  /auth/project/:prj/:subprj/comment/{id}:
    $ref: components/comment.yaml#/pathParam

components:
  securitySchemes:
    X-Access-Token:
      type: apiKey
      description: Access token obtained on login.
      name: X-Access-Token
      in: header
    X-Key:
      type: apiKey
      description: User ID (email)
      name: X-Key
      in: header